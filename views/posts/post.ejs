<html lang="en">
<%
function formatDate(timeString) {
    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

    const date = new Date(timeString);
    const month = months[date.getMonth()];
    const day = date.getDate();
    const year = date.getFullYear();

    const hours = date.getHours();
    const minutes = date.getMinutes();
    const ampm = hours >= 12 ? 'PM' : 'AM';
    const formattedHours = hours % 12 || 12; // Convert 0 to 12 for AM/PM format
    const formattedMinutes = minutes < 10 ? '0' + minutes : minutes; // Add leading zero if minutes is less than 10

    return `${month} ${day}, ${year} - ${formattedHours}:${formattedMinutes} ${ampm}`;
}
%>
<div class="post">
    <div class="user-info">
        <img class="user-info-img" src="<%= "/" + user.ProfilePicture %>" alt="user_profile_picture" width="50" height="50">
        <p id="post" class="post-info">
            <%= user.UserName %> <br>
            <%= formatDate(post.TimePosted) %>
        </p>
        <div class="report-section" style="text-align: right; margin-left: 270px; ">


            <button id="" style=" padding-top: 5px;padding-bottom: 5px; margin-top: 10px;border-radius: 24px; border: none; background-color: #d3dcdc ;" onclick="report('<%= post.PostID %>')">
                <img style=" width: 50%; height: 50%;" src="/images/megaphone-3-48.png" alt="Like_button">
            </button>
            <div id="popup<%= post.PostID %>" class="popup">
              <div class="popup-content">
                <p>Are you sure you want to report this post?</p>
                <button onclick="Submit('<%= post.PostID %>')">Yes</button>
                <button onclick="Close('<%= post.PostID %>')">No</button>
              </div>
            </div>
        </div>
    </div>
    <div style="text-align: left; margin-left: 70px;"><h3><%= post.Title %> </h3><p id="post"><%= post.Description %></p></div>
    <% if (post.Picture) { %>
        <img class="post-img" src="<%= "/" + post.Picture %>" alt="post_picture" width="400" height="200">
    <% } %>
    <div class="like-section" style="text-align: left; margin-left: 70px;">


        <button style=" padding-top: 5px;padding-bottom: 5px; margin-top: 10px;border-radius: 24px; border: none; background-color: #d3dcdc ;" onclick="toggleLike('<%= post.PostID %>')">
            <img style=" width: 50%; height: 50%;" src="/images/facebook-like-48.png" alt="Like_button">
        </button>
        <span id="like-count-<%= post.PostID %>"><%= post.Likes %></span>
    </div>
</div>
<div class="comment-section">
    <h3>Comments</h3>
    <form action=<%="/addComment/" + post.PostID%> method="POST">
        <input class="comment-field" id="general-comment-field" type="text" autocomplete="off" name="content" placeholder="Add your comment here">
        <div>
            <button type="reset" id="general-comment-cancel" style="display: none">Cancel</button>
            <button type="submit" id="general-comment-submit" style="display: none">Add Comment</button>
        </div>
    </form>
    <div class="comments">
        <% parent_comments.forEach(function(comment) { %>
            <div class="comment">
                <img class="user-info-img" src="<%= "/" + comment.ProfilePicture %>" alt="user_profile_picture" width="50" height="50">
                <div class="user-info">
                    <p id="post" class="post-info">
                        <%= comment.UserName %> <br>
                        <%= formatDate(comment.TimePosted) %>
                    </p>
                </div>
                <p id="post"><%= comment.Content %></p>
            </div>
        <% }) %>
    </div>
</div>
    <footer class="footer-main">

    </footer>
<script>
    const userID = '<%= user %>';
    function Inbox(otherInboxID) {
        window.location.href = '/chat/'+otherInboxID;
    }

    async function toggleLike(postId) {
        try {
            const response = await fetch(`/like/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const result = await response.json();
            if (result.success) {
                const likeCountElement = document.getElementById(`like-count-${postId}`);
                let currentCount = parseInt(likeCountElement.textContent);
                likeCountElement.textContent = result.liked ? currentCount + 1 : currentCount - 1;
            } else {
                console.error('Failed to toggle like');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
    let commentField = document.getElementById('general-comment-field');
    let commentSubmit = document.getElementById('general-comment-submit');
    let commentCancel = document.getElementById('general-comment-cancel');
    commentField.addEventListener('focus', () => {
        commentSubmit.style.display = 'inline';
        commentCancel.style.display = 'inline';
    });
    commentCancel.addEventListener('click', () => {
        commentSubmit.style.display = 'none';
        commentCancel.style.display = 'none';
    });

    async function report(postId) {
    document.getElementById('popup'+postId).style.display = 'block';
  }
  async function Submit(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
  
    await fetch(`/report/${postId}`, {
      method: 'POST',
      userID: userID,

    });
  }
  async function Close(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
  }
</script>
</html>